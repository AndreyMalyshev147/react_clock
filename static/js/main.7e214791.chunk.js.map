{"version":3,"sources":["components/Clock/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","clockInterval","state","presentDate","Date","toLocaleTimeString","this","window","setInterval","setState","console","log","name","props","clearInterval","className","React","Component","App","isClockVisible","nameClock","type","onClick","Math","floor","random","ReactDOM","render","document","getElementById"],"mappings":"iPAOaA,EAAb,4MACUC,mBADV,IAGEC,MAAQ,CACNC,aAAa,IAAIC,MAAOC,sBAJ5B,uDAOE,WAAqB,IAAD,OAClBC,KAAKL,cAAgBM,OAAOC,aAAY,WACtC,EAAKC,SAAS,CAAEN,aAAa,IAAIC,MAAOC,uBAExCK,QAAQC,IAAI,EAAKT,MAAMC,eACtB,OAZP,gCAeE,YAAqC,IAAhBS,EAAe,EAAfA,KACfN,KAAKO,MAAMD,OAASA,GACtBF,QAAQC,IAAR,qCAA0CC,EAA1C,eAAqDN,KAAKO,MAAMD,SAjBtE,kCAqBE,WACEE,cAAcR,KAAKL,iBAtBvB,oBAyBE,WACE,IAAQE,EAAgBG,KAAKJ,MAArBC,YAER,OACE,qBAAKY,UAAU,aAAf,SACE,qBAAKA,UAAU,oBAAf,SACGZ,UA/BX,GAA2Ba,IAAMC,WCApBC,EAAb,4MACEhB,MAAQ,CACNiB,gBAAgB,EAChBC,UAAW,GAHf,4CAME,WAAU,IAAD,OACP,EAAsCd,KAAKJ,MAAnCiB,EAAR,EAAQA,eAAgBC,EAAxB,EAAwBA,UAExB,OACE,qBAAKL,UAAU,MAAf,SACE,sBAAKA,UAAU,eAAf,UACE,oBAAIA,UAAU,aAAd,yBACA,mBAAGA,UAAU,gBAAb,2BAGA,4BACGI,GACM,cAAC,EAAD,CAAOP,KAAMQ,MAEtB,wBACEC,KAAK,SACLC,QAAS,kBAAM,EAAKb,SAAS,CAAEU,gBAAgB,KAC/CJ,UAAU,mBAHZ,kBAQA,wBACEM,KAAK,SACLC,QAAS,kBAAM,EAAKb,SAAS,CAAEU,gBAAgB,KAC/CJ,UAAU,mBAHZ,kBAQA,wBACEM,KAAK,SACLC,QAAS,kBAAM,EAAKb,SAAS,CAAEW,UAAWG,KAAKC,MAAsB,IAAhBD,KAAKE,aAC1DV,UAAU,yBAHZ,sCApCV,GAAyBC,IAAMC,WCJ/BS,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.7e214791.chunk.js","sourcesContent":["/* eslint-disable no-console */\nimport React from 'react';\n\nimport './Clock.scss';\n\nimport { Props, State } from '../../types/ClockTypes';\n\nexport class Clock extends React.Component<Props, State> {\n  private clockInterval?: number;\n\n  state = {\n    presentDate: new Date().toLocaleTimeString(),\n  };\n\n  componentDidMount() {\n    this.clockInterval = window.setInterval(() => {\n      this.setState({ presentDate: new Date().toLocaleTimeString() });\n\n      console.log(this.state.presentDate);\n    }, 1000);\n  }\n\n  componentDidUpdate({ name }: Props) {\n    if (this.props.name !== name) {\n      console.log(`The Clock was renamed from ${name} to ${this.props.name}`);\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.clockInterval);\n  }\n\n  render() {\n    const { presentDate } = this.state;\n\n    return (\n      <div className=\"clockField\">\n        <div className=\"clockField__clock\">\n          {presentDate}\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\n\nimport { StateTypes } from './types/StateTypes';\n\nimport { Clock } from './components/Clock';\n\nexport class App extends React.Component<{}, StateTypes> {\n  state = {\n    isClockVisible: true,\n    nameClock: 0,\n  };\n\n  render() {\n    const { isClockVisible, nameClock } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__box box\">\n          <h1 className=\"box__title\">React clock</h1>\n          <p className=\"box__timeText\">\n            Current time:\n          </p>\n          <p>\n            {isClockVisible\n                && <Clock name={nameClock} />}\n          </p>\n          <button\n            type=\"button\"\n            onClick={() => this.setState({ isClockVisible: true })}\n            className=\"box__show-button\"\n          >\n            Show\n          </button>\n\n          <button\n            type=\"button\"\n            onClick={() => this.setState({ isClockVisible: false })}\n            className=\"box__hide-button\"\n          >\n            Hide\n          </button>\n\n          <button\n            type=\"button\"\n            onClick={() => this.setState({ nameClock: Math.floor(Math.random() * 100) })}\n            className=\"box__randomName-button\"\n          >\n            Set random name\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}